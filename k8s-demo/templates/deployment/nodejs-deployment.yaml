apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.nodejs.name }}"
  labels:
    app: "{{ .Values.nodejs.label }}"
  namespace:  "{{ .Values.nodejs.namespace }}"
spec:
  replicas: {{ .Values.nodejs.replicas }}
  selector:
    matchLabels:
      app:  "{{ .Values.nodejs.selectorMatchLabelApp }}"
  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ .Values.nodejs.templateLabelApp }}"
    spec:
      containers:
      - image: "{{ .Values.nodejs.containerImageRegistrySource }}:{{ .Values.nodejs.containerImageRegistryVersion }}"
        imagePullPolicy: "{{ .Values.nodejs.imagePullPolicy }}"
        name: "{{ .Values.nodejs.containerName }}"
        env:
        - name: "DB_MONGO_CON_STRING"
          value: "mongodb+srv://admin:rDdYm3N2I8ahmShO@cluster0-ilnqk.gcp.mongodb.net/dbtest"
        - name: ENV_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: demo-config
              key: LOG_LEVEL
        - name: ENV_DB-USERNAME
          valueFrom:
            secretKeyRef:
              name: demo-secret
              key: DB-USERNAME
        ports:
        - containerPort: {{ .Values.nodejs.containerPort }}
          protocol: "{{ .Values.nodejs.containerProtocol }}"
        livenessProbe:
          httpGet:
            path: "{{ .Values.nodejs.livenessProbe.httpGet.path }}"
            port: {{ .Values.nodejs.livenessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.nodejs.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.nodejs.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: "{{ .Values.nodejs.readinessProbe.httpGet.path }}"
            port: {{ .Values.nodejs.readinessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.nodejs.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.nodejs.readinessProbe.periodSeconds }}